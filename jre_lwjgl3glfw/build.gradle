plugins {
    id 'java'
}

group = 'org.lwjgl.glfw'

configurations.default.setCanBeResolved(true)

def gitUsed() {
    def process = new ProcessBuilder('git', 'rev-parse', '--is-inside-work-tree')
            .directory(project.rootDir)
            .redirectErrorStream(true)
            .start()
    process.waitFor()
    return process.exitValue() == 0
}

def getGitHash(String projectName){
    def process = new ProcessBuilder('git', 'rev-parse', 'HEAD')
            .directory(project.rootDir)
            .redirectErrorStream(true)
            .start()

    process.waitFor()
    def hash = process.in.text.trim()
    return hash
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveBaseName = "lwjgl-glfw-classes"
    destinationDirectory.set(file("../app_MasteryLauncher/src/main/assets/components/lwjgl3/"))
    File versionFile = file("../app_MasteryLauncher/src/main/assets/components/lwjgl3/version")
    versionFile.write(project.version.toString())
    from {
        configurations.default.collect {
            println(it.getName())
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'net/java/openjdk/cacio/ctc/**'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}